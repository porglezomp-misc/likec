(module

(import bool)

(export person)
(struct person
  (name (ptr! char))
  (age int)
  (address address)
  (something (ptr! thing)))

(export person_summary)
(fn (person_summary (p (ptr! person))) void
  (printf (str! %s is %d years old!) p->name p->age))

(fn (fib (n int)) int
  (if (<= n 0)
    (return 0)
    (if (== n 1)
      (return 1)
      (return (+ (fib (- n 1))
                 (fib (- n 2)))))))

(export fib1)
(fn (fib1 (n int)) int
  (let! (a int) 0)
  (let! (b int) 1)
  (for ((let! (i int) 0)
        (< i n)
        (++ i))
    (let! (c int) b)
    (set! b (+ a b))
    (set! a c))
  (return a))

(fn (mainloop (running bool)) void
  (while running
    (set! running false)))

(fn (peano_add (a int) (b int)) int
  (while (> a 0)
    (-- a)
    (++ b))
  (return b))

(export address)
(struct address
  (street (ptr! char))
  (position int))

(export thing (abstract))
(struct thing
  (value int))

(export vec3)
(struct vec3
  (x double)
  (y double)
  (z double))

(export particle (abstract))
(struct particle
  (pos vec3)
  (vel vec3)
  (mass double))

(export line)
(struct line
  (begin vec3)
  (end vec3))

(export particle_system)
(struct particle_system
  (particles (ptr! particle))
  (count int)))
